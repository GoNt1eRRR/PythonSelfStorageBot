import requests
from aiogram import Router, F
from aiogram.types import Message, FSInputFile
from app.keyboards import consent_keyboard, main_menu_keyboard
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State

router = Router()

BASE_URL = "http://127.0.0.1:8000/api/"


class RegistrationStates(StatesGroup):
    waiting_for_name = State()


@router.message(F.text == "/start")
async def start_handler(message: Message, state: FSMContext):
    telegram_id = message.from_user.id

    response = requests.get(f'{BASE_URL}custom-user/', params={"telegram_id": telegram_id})

    if response.status_code == 200:
        users = response.json()
        user = next((u for u in users if u["telegram_id"] == str(telegram_id)), None)
        if user:
            await message.answer(
                "üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞! üéâ\n\n"
                "–í—ã —Å–Ω–æ–≤–∞ —Å –Ω–∞–º–∏, –∏ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –≤–∞—à–∏ –≤–µ—â–∏ –≤—Å–µ–≥–¥–∞ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.\n\n"
                "üì¶ –ß–µ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–µ–≥–æ–¥–Ω—è? –í—ã–±—Ä–∞—Ç—å —è—á–µ–π–∫—É? –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–∞—Ä–∏—Ñ—ã? –í—Å—ë –≥–æ—Ç–æ–≤–æ –¥–ª—è –≤–∞—à–µ–≥–æ —É–¥–æ–±—Å—Ç–≤–∞! üöÄ",
                reply_markup=main_menu_keyboard
            )
            return

    await message.answer("–ö–∞–∂–µ—Ç—Å—è, –≤–∞—Å –Ω–µ—Ç –≤ –Ω–∞—à–µ–π –±–∞–∑–µ. –£–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ—ë –∏–º—è:")
    await state.set_state(RegistrationStates.waiting_for_name)


@router.message(RegistrationStates.waiting_for_name)
async def process_user_name(message: Message, state: FSMContext):
    user_name = message.text
    telegram_id = message.from_user.id
    telegram_name = message.from_user.username

    response = requests.post(
        f"{BASE_URL}custom-user/",
        json={
            "username": user_name,
            "telegram_id": telegram_id,
            "telegram_name": telegram_name
        }
    )

    if response.status_code == 201:
        await message.answer(
            "–°–ø–∞—Å–∏–±–æ! –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.\n"
            "–¢–µ–ø–µ—Ä—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ:",
            reply_markup=consent_keyboard
        )

        consent_file = FSInputFile("app/Agreement.pdf")
        await message.answer_document(document=consent_file)
    else:
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

    await state.clear()


@router.message(F.text == "–Ø –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ")
async def user_consented(message: Message):
    await message.answer(
        "‚ú® –°–ø–∞—Å–∏–±–æ –∑–∞ –¥–æ–≤–µ—Ä–∏–µ! üéâ\n\n"
        "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞—à–∏–º —É–¥–æ–±–Ω—ã–º —Å–µ—Ä–≤–∏—Å–æ–º:\n"
        "üì¶ –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —è—á–µ–π–∫—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–µ—â–µ–π\n"
        "üîç –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–∞—Ä–∏—Ñ—ã –∏ —É—Å–ª–æ–≤–∏—è —Ö—Ä–∞–Ω–µ–Ω–∏—è\n"
        "üßπ –î–µ—Ä–∂–∞—Ç—å –≤–∞—à–∏ –≤–µ—â–∏ –≤ –ø–æ—Ä—è–¥–∫–µ –∏ —Å–æ—Ö—Ä–∞–Ω–Ω–æ—Å—Ç–∏.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª –∏ –Ω–∞—á–Ω—ë–º —Ä–∞–±–æ—Ç–∞—Ç—å! üöÄ",
        reply_markup=main_menu_keyboard
    )