import requests
from aiogram import Router, F
from aiogram.types import Message
from app.keyboards import order_keyboard

from app.keyboards import inline_my_orders

second_router = Router()
BASE_URL = "http://127.0.0.1:8000/api/"


@second_router.message(F.text == 'Тарифы')
async def rules(message: Message):
    await message.answer('''<B>Тарифы на услуги хранения:</B>
1. Маленький - маленькая ячейка (1 м3). Стоимость 100 руб/день.

2. Средний - средняя ячейка (1-5 м3). Стоимость 300 руб/день.

3. Большой - большая ячейка (более 5 м3). Стоимость 500 руб/день''', parse_mode='HTML')


@second_router.message(F.text == 'Правила хранения')
async def plans(message: Message):
    await message.answer('''
<B>На складе не следует хранить следующие вещи:</B>

1. Опасные вещества — химикаты, горючие материалы, ядовитые или токсичные жидкости и газы. Они могут быть опасны для \
здоровья и безопасности работников, а также представляют угрозу для окружающей среды.

2. Продукты с истекающим сроком годности — продукты питания или медикаменты, которые могут испортиться и стать \
источником загрязнения или даже отравления.

3. Легковоспламеняющиеся материалы — такие как растворители, аэрозоли, бензин, топливо и другие жидкости, которые \
легко могут загореться.

4. Животные и растения — из-за невозможности поддержания необходимого ухода и условий для их содержания.

5. Ценные и важные документы — такие как юридические документы, деньги или ценные вещи, которые требуют \
специального хранения.

6. Техника, требующая особых условий — например, электронные устройства, для которых необходимо поддержание \
определённой температуры, влажности или защиты от статического электричества.

7. Оружие и боеприпасы — в большинстве случаев требуют специального хранения в соответствии с законодательством и \
условиями безопасности.

8. Пожароопасные материалы — например, газовые баллоны, пиротехника, взрывчатые вещества.

9. Нераспакованные товары — в случае если упаковка повреждена, такие товары могут подвергаться загрязнению,\
 порче или утрате ценности.

10 Предметы, нарушающие санитарные нормы — например, загрязненные или старые вещи, которые могут стать источником\
 инфекции или привести к распространению вредителей.''', parse_mode='HTML')


@second_router.message(F.text == 'Заказать ячейку')
async def order(message: Message):
    await message.answer('''Выберите, каким способом Вам удобнее отвезти груз. Наша компания предоставляет \
бесплатную доставку грузов любых размеров до выбранного Вами склада! Курьер измерит груз и подберет подходящий \
тариф.''', reply_markup=order_keyboard)


@second_router.message(F.text == 'Заказы')
async def my_orders(message: Message):
    telegram_id = message.from_user.id
    await message.answer('''Все Ваши заказы.''')
    response = requests.get(f'{BASE_URL}order')
    response.raise_for_status()
    orders = response.json()

    my_orders = []
    for order in orders:
        if order['customer'] == str(telegram_id):
            my_orders.append(order)

    await message.answer('''куку''', reply_markup=await inline_my_orders(my_orders))
